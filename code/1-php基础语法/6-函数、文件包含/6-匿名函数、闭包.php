<?php
// https://www.php.cn/php-ask-429876.html
// php闭包和js闭包有一些区别

// 匿名函数Anonymous functions：没有名字的函数，定义时要赋值给变量再去使用
$func = function () {
  echo '我是匿名函数<br>';
};  // 由于是赋值，所以结尾要分号

// 用可变函数调用匿名函数
$func();

// 变量保存匿名函数，本质得到一个Closure对象 （闭包对象）
var_dump($func);  // object(Closure)#1 (0) { }
echo '<br>';

/**
 * 匿名函数也叫闭包函数，当匿名函数赋值给变量时，php自动将表达式转换为closure类的实例对象
 * 作用：闭包可以保存上下文的一些变量和值，延长其生命周期
 * 特性：默认闭包不能从父作用域继承变量，一般通过use结构传递进去，默认是传clone的值，如果要完全引用，可以加&进行引用传值
 * 闭包一般理解：函数内部定义匿名函数，然后通过use关键字得到父作用域的变量，接着将匿名函数返回出去。当调用外部函数时，匿名函数被返回，虽然外部函数已经执行结束，但由于匿名函数等待调用，所以use的变量不会销毁。
 */
function out()
{
  $a = 123;
  // 通过use，将父级作用域的变量传入匿名函数内
  $closure = function () use ($a) {
    return $a;
  };
  // 将匿名函数返回出去
  return $closure;
}
// 将返回的匿名函数保存给变量，out虽然执行结束，但$a在等待匿名函数调用，没有销毁
$b = out();
echo $b();
