<pre>
选择排序：每次从待排序数组元素中比出最小（或最大）的一个，直到全部元素都被比完。
是不稳定的排序算法
过程：
1 假设第一个元素为最小元素，记下key
2 寻找右侧剩余元素中有没有比他更小的，如果有，就更新key
3 如果找完也没有更小的了，就交换元素（省掉了冒泡中每次比较都交换元素的过程，只执行最后一次）
4 确定一个后，再重复n-1比较，依次类推，直到元素本身是最后一个，就是最小（最大）的了


监视哨：往往是程序里面的一个变量，如果是对数字排序的话，那么该变量一般是数值型变量。变量的赋值就相当于哨兵，当排序数列中出现与哨兵相等的值或有某种既定关系出现时，就做一种操作，比如说停止排序，或进行下一趟排序。
<?php
  
$arr = [2, 6, 1, 7, 3, 8, 9, 4];
// 1：最多要找多少轮：length-1
for($i = 0,$len=count($arr);$i<=$len-1;$i++){
  // 2：设置监视哨
  $min=$i;
  // 3：循环比较有没有更小的，循环的边界是j=$len-1
  for($j=$i+1;$j<=$len-1;$j++){
// 4：如果有，就更新监视哨
    if($arr[$j]<$arr[$min]){
      $min=$j;
    }
  }
  // 5：比较完交换数组元素，如果arr[min]和arr[i]相等，说明没有更小的了，不交换，不相等说明需要交换
  if($arr[$min]!=$arr[$i]){

    $tmp = $arr[$i];
    $arr[$i] = $arr[$min];
    $arr[$min] = $tmp;
  }

  print_r($arr);
}
